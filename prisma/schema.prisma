// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model rides {
  id          Int    @unique @default(autoincrement())
  name        String
  phoneNumber String
  sessionKey  String @unique

  isLocationAvail Boolean @default(false)
  lat             String?
  lng             String?

  isCallAccepted    Boolean          @default(false)
  isCallCompleted   Boolean          @default(false)
  customerSupportId Int?
  callAcceptedBy    customerSupport? @relation(fields: [customerSupportId], references: [id])

  isRideAccepted     Boolean           @default(false)
  isRideCompleted    Boolean           @default(false)
  ambulancePartnerId Int?
  rideAcceptedBy     ambulancePartner? @relation(fields: [ambulancePartnerId], references: [id])

  address   String?
  createdAt DateTime @default(now())
}

model customerSupport {
  id          Int     @unique @default(autoincrement())
  name        String
  phoneNumber String  @unique
  email       String
  password    String
  isOnline    Boolean
  fcmToken    String?
  imageUrl    String?
  rides       rides[]
}

model ambulancePartner {
  id            Int     @unique @default(autoincrement())
  name          String
  phoneNumber   String  @unique
  email         String
  password      String
  isOnline      Boolean
  lat           String?
  lng           String?
  imageUrl      String?
  vehicleNumber String?
  fcmToken      String?
  rides         rides[]
}

model doctor {
  id          Int     @unique @default(autoincrement())
  fName       String
  lName       String
  displayName String
  phoneNumber String  @unique
  email       String
  password    String
  imageUrl    String?

  // verification details
  isVerified Boolean @default(false)
  isfeatured Boolean @default(false)

  // clinic details
  clinicName    String?
  clinicAddress String?

  // clinic location
  lat String?
  lng String?

  education  education[]
  experience experience[]
  timings    timings[]
}

model education {
  id            Int    @unique @default(autoincrement())
  courseName    String
  university    String
  yearofPassing Int

  doctorId Int
  doctor   doctor @relation(fields: [doctorId], references: [id])
}

model experience {
  id               Int      @unique @default(autoincrement())
  title            String
  hospital         String
  employmentType   String
  from             DateTime
  to               DateTime
  currentlyWorking Boolean  @default(false)
  doctorId         Int
  doctor           doctor   @relation(fields: [doctorId], references: [id])
}

model timings {
  id          Int     @unique @default(autoincrement())
  day         String
  startTime   String  @default("10:00")
  endTime     String  @default("17:00")
  isAvailable Boolean @default(true)

  fee        Int     @default(0)

  doctorId    Int
  doctor      doctor  @relation(fields: [doctorId], references: [id])

  slots       slots[]
}


model slots{
  id         Int     @unique @default(autoincrement())
  startTime  String  @default("10:00")
  endTime    String  @default("17:00")

  timmingsId Int
  timings    timings @relation(fields: [timmingsId], references: [id])
}
